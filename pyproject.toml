[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "pynnmap"
dynamic = ["version"]
description = "Python based nearest neighbor mapping"
readme = "README.md"
license = ""
requires-python = ">=3.8"
authors = [
    { name = "Matt Gregory", email = "matt.gregory@oregonstate.edu" },
    { name = "Heather Roberts", email = "heather.roberts@oregonstate.edu" },
]
dependencies = [
    "affine",
    "click",
    "click_plugins",
    "jenkspy",
    "lxml",
    "matplotlib",
    "numpy",
    "pandas",
    "patsy",
    "pydantic",
    "rasterio",
    "rpy2",
    "scikit-learn",
    "scipy",
]

[project.scripts]
pynnmap = "pynnmap.cli.main:main_group"

[project.entry-points.pynnmap]
build_attribute_raster = "pynnmap.cli.build_attribute_raster:cli_main"
build_model = "pynnmap.cli.build_model:build_model"
cross_validate = "pynnmap.cli.cross_validate:cross_validate"
find_outliers = "pynnmap.cli.find_outliers:find_outliers"
impute = "pynnmap.cli.impute:impute"
new_targets = "pynnmap.cli.new_targets:new_targets"
run_diagnostics = "pynnmap.cli.run_diagnostics:main"

[project.urls]
Homepage = "https://github.com/lemma-osu/pynnmap"
Source = "https://github.com/lemma-osu/pynnmap"

[tool.hatch.version]
path = "src/pynnmap/__about__.py"

[tool.hatch.build.targets.wheel]
packages = ["src/pynnmap"]

[tool.hatch.build.targets.sdist]
include = ["/src"]

[tool.hatch.envs.default]
dependencies = ["pre-commit"]

[tool.hatch.envs.test]
dependencies = ["pytest", "pytest-cov"]

[tool.hatch.envs.test.scripts]
all = "pytest . {args} --doctest-modules"
coverage = "pytest . --cov=src/pynnmap {args} --doctest-modules"

[tool.pytest.ini_options]
pythonpath = "src/"

[tool.ruff]
target-version = "py38"
fix = true
show-fixes = true

[tool.ruff.lint]
select = [
    "E",
    "I",
    "F",
    "B",
    "FA",
    "UP",
    "ISC",
    # "PT",
    "NPY",
    "Q",
    "RET",
    # "SIM",
    "PERF",
]

[tool.ruff.lint.isort]
known-first-party = ["pynnmap"]
